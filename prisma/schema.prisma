
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" 
  url      = env("DATABASE_URL")
}

model User {
  id          String     @id @default(uuid())
  name        String
  email       String     @unique
  passwordHash String
  isDeleted   Boolean    @default(false)
  createdAt   DateTime   @default(now())
  wallet      Wallet?
  transactionsFrom Transaction[] @relation("FromUser")
  transactionsTo   Transaction[] @relation("ToUser")
}

model Wallet {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  balances  Json     
  updatedAt DateTime @updatedAt
}

model Transaction {
  id          String    @id @default(uuid())
  fromUser    User?     @relation("FromUser", fields: [fromUserId], references: [id])
  fromUserId  String?
  toUser      User?     @relation("ToUser", fields: [toUserId], references: [id])
  toUserId    String?
  type        TransactionType
  currency    String
  amount      Float
  timestamp   DateTime  @default(now())
  isFlagged   Boolean   @default(false)
  notes       String?
  isDeleted   Boolean   @default(false)
  fraudFlag   FraudLog?
}

model FraudLog {
  id            String      @id @default(uuid())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId String      @unique
  reason        String
  flaggedAt     DateTime    @default(now())
}

model Admin {
  id          String   @id @default(uuid())
  email       String   @unique
  passwordHash String
  createdAt   DateTime @default(now())
}

enum TransactionType {
  DEPOSIT
  WITHDRAW
  TRANSFER
}
